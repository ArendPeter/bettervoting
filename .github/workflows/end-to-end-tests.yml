name: Docker Compose Action

on: [push]

jobs:
  test:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        continue-on-error: false
      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
        continue-on-error: false
      # - name: Install Docker using Docker's official script
      #   run: |
      #     curl -fsSL https://get.docker.com -o get-docker.sh
      #     sudo sh get-docker.sh
      #   continue-on-error: false

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.34.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
        continue-on-error: false

      # - name: Install dependencies
      #   run: npm install
      #   continue-on-error: false
      # - name: Make directory for test results
      #   run: |
      #     mkdir -p testing/test-results
      #     mkdir -p testing/playwright-report
      #   continue-on-error: false

      - name: Start application-specific services using Docker Compose
        run: docker compose up --build playwright
        continue-on-error: false
      
      # - name: Wait for playwright to exit
      #   run: |
      #     while docker inspect -f '{{.State.Status}}' playwright | grep -q running; do echo "Waiting for playwright to exit..."; sleep 5; done
      #   continue-on-error: false
      # - name: Run Playwright tests
      #   id: tests
      #   run: |
      #     docker pull mcr.microsoft.com/playwright:v1.51.1-noble
      #     docker run -v ./testing:/app \
      #       mcr.microsoft.com/playwright:v1.51.1-noble \
      #       -c "npx playwright test --reporter=html"

      - name: Check for failure
        id: tests
        run: |
            export status=$(grep -q "passed" ./testing/test-results/.last-run.json && echo passed || echo failed)
            echo "status=$status" >> "$GITHUB_OUTPUT"
            echo $status
    
      - uses: mshick/add-pr-comment@v2
        if: always()
        with:
            message-path: |
              ./testing/playwright-report/result.txt
            message-failure: |
              Workflow failed

      # - name: Setup Pages
      #   if: steps.tests.outputs.status == 'failed'
      #   uses: actions/configure-pages@v3  

      - name: Upload Artifact
        if: steps.tests.outputs.status == 'failed'
        uses: actions/upload-artifact@v4
        with:
          name: "playwright-report"
          path: "./testing/playwright-report/"
          retention-days: 30
    
      - name: Fail the job if there any failed case
        if: steps.tests.outputs.status == 'failed'
        run : |
              exit 1
      
      
      - name: Stop Docker Compose services
        if: always()
        run: docker-compose down --volumes --remove-orphans
        continue-on-error: false
      
      
